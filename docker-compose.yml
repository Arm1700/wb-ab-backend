version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: wb-ab-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wb_ab_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wb-ab-network

  # Backend API (NestJS)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wb-ab-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: wb_ab_db
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/wb_ab_db?schema=public
    networks:
      - wb-ab-network
    depends_on:
      - postgres
    ports:
      - "3001:3001"

    
  # Frontend (Next.js)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: wb-ab-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://wb-ab-backend:3001/api
    networks:
      - wb-ab-network

  # NGINX reverse proxy
  nginx:
    image: nginx:alpine
    container_name: wb-ab-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/wb-project/nginx/conf.d:/etc/nginx/conf.d

    networks:
      - wb-ab-network

networks:
  wb-ab-network:
    driver: bridge

volumes:
  postgres_data:
